{
	"env": {
		"browser": true,
		"es2021": true,
		"node": true
	},
	"extends": ["eslint:recommended", "plugin:svelte/recommended", "plugin:prettier/recommended"],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json",
		"ecmaVersion": "latest",
		"sourceType": "module",
		"extraFileExtensions": [".svelte"],
		"ecmaFeatures": {
			"globalReturn": false,
			"impliedStrict": true
		}
	},
	"plugins": ["@typescript-eslint"],
	"overrides": [
		{
			"files": ["web/**/*.svelte"],
			"parser": "svelte-eslint-parser",
			"parserOptions": {
				"parser": "@typescript-eslint/parser",
				"project": "./web/tsconfig.json"
			},
			"rules": {
				"brace-style": ["warn", "1tbs"]
			}
		},
		{
			"files": ["web/**/*.ts", "web/*.ts"],
			"parserOptions": {
				"project": "./web/tsconfig.json"
			}
		}
	],
	"rules": {
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-duplicate-type-constituents": "warn",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksConditionals": false,
				"checksSpreads": true,
				"checksVoidReturn": false
			}
		],
		"@typescript-eslint/no-for-in-array": "warn",
		"no-implied-eval": "off",
		"@typescript-eslint/no-implied-eval": "error",
		"no-loss-of-precision": "off",
		"@typescript-eslint/no-loss-of-precision": "warn",
		"@typescript-eslint/no-redundant-type-constituents": "warn",
		"@typescript-eslint/no-this-alias": [
			"warn",
			{
				"allowDestructuring": true
			}
		],
		"@typescript-eslint/no-unnecessary-type-constraint": "warn",
		"@typescript-eslint/no-unsafe-call": "error",
		"@typescript-eslint/no-unsafe-declaration-merging": "error",
		"@typescript-eslint/no-unsafe-enum-comparison": "warn",
		"@typescript-eslint/no-unsafe-member-access": "error",
		"@typescript-eslint/no-unsafe-return": "error",
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"vars": "all",
				"args": "all",
				"ignoreRestSiblings": false,
				"argsIgnorePattern": "_"
			}
		],
		"@typescript-eslint/no-var-requires": "warn",
		"@typescript-eslint/prefer-as-const": "warn",
		"require-await": "off",
		"@typescript-eslint/require-await": "error",
		"@typescript-eslint/triple-slash-reference": "error",
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/prefer-for-of": "warn",
		"@typescript-eslint/no-empty-interface": "error",
		"no-empty-function": "off",
		"@typescript-eslint/no-empty-function": [
			"error",
			{
				"allow": [
					"private-constructors",
					"protected-constructors",
					"constructors",
					"decoratedFunctions",
					"overrideMethods"
				]
			}
		],
		"no-dupe-class-members": "off",
		"@typescript-eslint/no-dupe-class-members": "error",
		"object-curly-newline": [
			"error",
			{
				"ObjectExpression": { "multiline": true },
				"ObjectPattern": { "multiline": true },
				"ImportDeclaration": "never",
				"ExportDeclaration": "never"
			}
		],
		"brace-style": ["warn", "stroustrup"],
		"lines-between-class-members": [
			"error",
			{
				"enforce": [
					{ "blankLine": "never", "prev": "field", "next": "field" },
					{ "blankLine": "always", "prev": "*", "next": "*" }
				]
			}
		],
		"curly": "error",
		"semi": ["error", "always"],
		"prettier/prettier": "warn",
		"no-undef": "off"
	}
}
